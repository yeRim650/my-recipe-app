version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: recipe-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: cookwise
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - recipe-network

  # QDRANT 벡터 데이터베이스
  qdrant:
    image: qdrant/qdrant:latest
    container_name: recipe-qdrant
    ports:
      - "6201:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - recipe-network

  # FastAPI 백엔드
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: recipe-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+pymysql://root:1234@mysql:3306/cookwise
      - QDRANT_URL=http://qdrant:6333
      - ENV=production
      - FOOD_SAFETY_API_KEY=${FOOD_SAFETY_API_KEY}
      - FOOD_SAFETY_SERVICE_ID=${FOOD_SAFETY_SERVICE_ID:-COOKRCP01}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
    depends_on:
      mysql:
        condition: service_healthy
      qdrant:
        condition: service_started
    volumes:
      - ./backend/hf_cache:/app/hf_cache
    networks:
      - recipe-network

  # Next.js 프론트엔드
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: recipe-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - recipe-network

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: recipe-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - recipe-network
    profiles:
      - nginx

  # 데이터 초기화 서비스 (한 번만 실행)
  init-data:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: recipe-init-data
    environment:
      - DATABASE_URL=mysql+pymysql://root:1234@mysql:3306/cookwise
      - QDRANT_URL=http://qdrant:6333
      - ENV=production
      - FOOD_SAFETY_API_KEY=${FOOD_SAFETY_API_KEY}
      - FOOD_SAFETY_SERVICE_ID=${FOOD_SAFETY_SERVICE_ID:-COOKRCP01}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
    depends_on:
      mysql:
        condition: service_healthy
      qdrant:
        condition: service_started
    volumes:
      - ./backend/hf_cache:/app/hf_cache
    command: python init_data.py
    networks:
      - recipe-network
    profiles:
      - init

volumes:
  mysql_data:
  qdrant_data:

networks:
  recipe-network:
    driver: bridge 